{"remainingRequest":"D:\\project\\study\\tesseract.js-vue-offline\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\study\\tesseract.js-vue-offline\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\study\\tesseract.js-vue-offline\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\study\\tesseract.js-vue-offline\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\study\\tesseract.js-vue-offline\\src\\App.vue","mtime":1682407654233},{"path":"D:\\project\\study\\tesseract.js-vue-offline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\study\\tesseract.js-vue-offline\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\project\\study\\tesseract.js-vue-offline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\study\\tesseract.js-vue-offline\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\project\\\\study\\\\tesseract.js-vue-offline\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport { createWorker, PSM, OEM } from \"tesseract.js\";\n\nvar path = require(\"path\");\n\nvar worker = createWorker({\n  workerPath: \"/tesseract/tesseract.js/dist/worker.min.js\",\n  corePath: \"/tesseract/tesseract.js-core/tesseract-core.wasm.js\",\n  langPath: \"/tesseract/tesseract-lang\",\n  logger: function logger(m) {\n    return console.log(m);\n  }\n});\nexport default {\n  name: \"app\",\n  data: function data() {\n    return {\n      haveInit: false,\n      text: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.showImg();\n  },\n  methods: {\n    recognize: function () {\n      var _recognize = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var fileInput, img, _ref, text;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fileInput = document.querySelector(\"#file-input\");\n\n                if (this.haveInit) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 4;\n                return worker.load();\n\n              case 4:\n                _context.next = 6;\n                return worker.loadLanguage(\"chi_sim\");\n\n              case 6:\n                _context.next = 8;\n                return worker.initialize(\"chi_sim\", OEM.LSTM_ONLY);\n\n              case 8:\n                _context.next = 10;\n                return worker.setParameters({\n                  tessedit_pageseg_mode: PSM.SINGLE_BLOCK\n                });\n\n              case 10:\n                this.haveInit = true;\n\n              case 11:\n                img = document.getElementById(\"canvas\");\n                _context.next = 14;\n                return worker.recognize(img);\n\n              case 14:\n                _ref = _context.sent;\n                text = _ref.data.text;\n                this.text = text;\n                console.timeEnd(\"time:\");\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function recognize() {\n        return _recognize.apply(this, arguments);\n      }\n\n      return recognize;\n    }(),\n    showImg: function showImg() {\n      var _this = this;\n\n      var fileInput = document.querySelector(\"#file-input\");\n      fileInput.addEventListener(\"change\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var file, reader;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                file = fileInput.files[0];\n\n                if (file) {\n                  reader = new FileReader();\n                  reader.readAsDataURL(file);\n                  reader.onload =\n                  /*#__PURE__*/\n                  _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee2() {\n                    var img;\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            img = new Image();\n                            img.src = reader.result;\n\n                            img.onload = function () {\n                              canvas.width = img.width;\n                              canvas.height = img.height;\n                              var ctx = canvas.getContext(\"2d\");\n                              ctx.drawImage(img, 0, 0);\n\n                              _this.recognize();\n                            };\n\n                          case 3:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n                }\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <input type=\"file\" id=\"file-input\" accept=\"image/*\" />\n    <div><canvas id=\"canvas\"></canvas></div>\n    <div style=\"margin-top:70px;\">{{ text }}</div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport { createWorker, PSM, OEM } from \"tesseract.js\";\nconst path = require(\"path\");\nconst worker = createWorker({\n  workerPath: \"/tesseract/tesseract.js/dist/worker.min.js\",\n  corePath: \"/tesseract/tesseract.js-core/tesseract-core.wasm.js\",\n  langPath: \"/tesseract/tesseract-lang\", \n  logger: (m) => console.log(m),\n});\n\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      haveInit: false,\n      text: \"\",\n    };\n  },\n  mounted(){\n    this.showImg();\n  },\n  methods: {\n    async recognize() {\n      const fileInput = document.querySelector(\"#file-input\");\n      if (!this.haveInit) {\n        await worker.load();\n        await worker.loadLanguage(\"chi_sim\");\n        await worker.initialize(\"chi_sim\", OEM.LSTM_ONLY);\n        await worker.setParameters({\n          tessedit_pageseg_mode: PSM.SINGLE_BLOCK,\n        });\n        this.haveInit = true;\n      }\n\n      const img = document.getElementById(\"canvas\");\n      const {\n        data: { text },\n      } = await worker.recognize(img);\n      this.text = text;\n      console.timeEnd(\"time:\");\n    },\n    showImg() {\n      const fileInput = document.querySelector(\"#file-input\");\n      fileInput.addEventListener(\"change\", async () => {\n        const file = fileInput.files[0];\n        if (file) {\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = async () => {\n            const img = new Image();\n            img.src = reader.result;\n            img.onload = () => {\n              canvas.width = img.width;\n              canvas.height = img.height;\n              const ctx = canvas.getContext(\"2d\");\n              ctx.drawImage(img, 0, 0);\n              this.recognize();\n            };\n          };\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"sourceRoot":"src"}]}